name: CI - Lint, Test, Build Docker Image

on:
  push:
    branches:
      - main
      - develop # Or any other branches you want to build from
    tags: # Build on tags (e.g., v1.0.0)
      - 'v*.*.*'
  pull_request:
    branches:
      - main
      - develop

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 pytest black # Add testing/linting tools

      - name: Lint with Flake8
        run: |
          flake8 src/ api/ main.py --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 src/ api/ main.py --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      
      - name: Check formatting with Black
        run: |
          black --check .

      # - name: Run Pytests (Add your tests in a 'tests/' directory)
      #   run: |
      #     pytest tests/

  build-and-push-docker:
    needs: lint-and-test # Run only if lint-and-test passes
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # Needed to push to GitHub Packages (GHCR)

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for DVC to work properly if needed for tags

      # OPTIONAL: DVC Pull step if you need specific artifacts in the image
      # - name: Set up DVC
      #   uses: iterative/setup-dvc@v1
      # - name: Configure AWS Credentials (if using S3 for DVC)
      #   uses: aws-actions/configure-aws-credentials@v4
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DVC }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DVC }}
      #     aws-region: your-aws-region # e.g., us-east-1
      # - name: DVC Pull (specific artifacts for API)
      #   run: |
      #     dvc pull artifacts/model_trainer/best_model_directory # Example: pull only the best model
      #     # Or pull everything: dvc pull -R

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # - name: Log in to Docker Hub (Alternative)
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/text-classifier-app # For GHCR
            # ${{ secrets.DOCKERHUB_USERNAME }}/text-classifier-app # For Docker Hub
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix=,suffix=,event=push # Git SHA as tag

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }} # Push only on merges/tags, not PRs
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max